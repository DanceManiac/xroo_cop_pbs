#include "common.h"

uniform	float4		screen_res;

struct	_input
{
	float4	hpos : POSITION;
#ifdef        USE_VTF
	float4	tc0  : TEXCOORD0;		// tc.xy, tc.w = tonemap scale
#else
	float2	tc0  : TEXCOORD0;		// tc.xy
#endif
	float2	tcJ	 : TEXCOORD1;		// jitter coords
};

struct	v2p
{
	float2	tc0 : TEXCOORD0;
	float2	tc1 : TEXCOORD1;
};

float4	main(_input I) : COLOR0
{
	// FIXME: Should add a half-texel offset to I.tc0 here
	// This would fix horizontal line issue
	gbuffer_data gbd0 = gbuffer_load_data( I.tc0.xy + 0.5f * pos_decompression_params2.zw,			I.hpos.xy * 2 );
	gbuffer_data gbd1 = gbuffer_load_data( I.tc0.xy - 0.5f * pos_decompression_params2.zw,			I.hpos.xy * 2 );
	gbuffer_data gbd2 = gbuffer_load_data( I.tc0.xy + 0.5f * float2(+pos_decompression_params2.z,	-pos_decompression_params2.w), I.hpos.xy * 2 );
	gbuffer_data gbd3 = gbuffer_load_data( I.tc0.xy + 0.5f * float2(-pos_decompression_params2.z,	+pos_decompression_params2.w), I.hpos.xy * 2 );
	gbuffer_data gbd = gbd0;
	if (gbd1.P.z < gbd.P.z) gbd = gbd1;	
	if (gbd2.P.z < gbd.P.z) gbd = gbd2;	
	if (gbd3.P.z < gbd.P.z) gbd = gbd3;

	float4	P = float4( gbd.P, gbd.metalness );	// position.(mtl or sun)


#if SSAO_OPT_DATA == 2	
	return  float4(P.zzzz);
#else	//	USE_HBAO == 2	
	P 		= tex2D         (s_position,      I.tc0 - 0.5f * screen_res.zw);
	return  float4(P.zzzz);
#endif	//	USE_HBAO == 2
}
